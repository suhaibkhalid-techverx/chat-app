# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Chat-App CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12.x, 14.x, 16.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm install
    - run: npm ci
    - run: npm run build --if-present
    
  docker: 
    runs-on: ubuntu-latest
    
    steps:
    - name: Login to DockerHub
      uses: docker/login-action@v1 
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}

    - name: Build and push Docker images
      uses: docker/build-push-action@v2.9.0
      with:
        push: true
        tags: suhaibkhalidtechverx/system-210:latest
        
  heroku:
    
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Build, Push and Deploy to Heroku
      id: heroku
      uses: jctaveras/heroku-deploy@v2.1.3
      with:
        email: ${{ secrets.HEROKU_EMAIL }} # your heroku email
        api_key: ${{ secrets.HEROKU_API_KEY }} # your heroku api key
        app_name: ${{ secrets.HEROKU_APP_NAME }} # you aplication name
        dockerfile_path: '.' # set the path to the folder where the Dockerfile is located
        #options: '' # Docker Build Options
        formation: 'web' # Docker Dyno Formation. By default is web
    
